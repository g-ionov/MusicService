services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    environment:
      DB_HOST: database
      DB_NAME: music_service
      DB_USER: db_user
      DB_PASSWORD: db_password

    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database

  database:
    image: postgres:15.2-alpine3.17
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=music_service
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_password
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:7.0-alpine3.17
    ports:
      - "6379:6379"

  worker1:
    build:
      context: .
    hostname: worker1
    environment:
      DB_HOST: database
      DB_NAME: music_service
      DB_USER: db_user
      DB_PASSWORD: db_password
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=warning
    volumes:
      - ./app:/app
    links:
      - redis
    depends_on:
      - redis
      - database

  worker2:
    build:
      context: .
    hostname: worker2
    environment:
      DB_HOST: database
      DB_NAME: music_service
      DB_USER: db_user
      DB_PASSWORD: db_password
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=warning
    volumes:
      - ./app:/app
    links:
      - redis
    depends_on:
      - redis
      - database

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower --port=5555
    volumes:
      - ./app:/app
    links:
      - redis
    ports:
      - "5555:5555"
    depends_on:
      - redis
